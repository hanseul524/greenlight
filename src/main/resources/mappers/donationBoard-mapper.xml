<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="donationBoardMapper">
	<resultMap type="DonationBoard" id="donationBoardResultMap">
		<id property="boardNo" column="BOARD_NO"/>
		<result property="dtSubject" column="DT_SUBJECT"/>
		<result property="dtContents" column="DT_CONTENTS"/>
		<result property="dtReplyCount" column="DT_REPLY_COUNT"/>
		<result property="dtTargetAmount" column="DT_TARGET_AMOUNT"/>
		<result property="donationAmount" column="DT_DONATION_AMOUNT"/>
		<result property="dtSuccess" column="DT_SUCCESS"/>
		<result property="writerId" column="WRITER_ID"/>
		<result property="writeDate" column="WRITE_DATE"/>
		<result property="fileName" column="FILE_NAME"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="fileMain" column="FILE_MAIN"/>
	</resultMap>
	<resultMap type="DonationImage" id="donationImageResultMap">
		<result property="boardNo" column="BOARD_NO"/>
		<result property="fileName" column="FILE_NAME"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="fileMain" column="FILE_MAIN"/>
	</resultMap>
	<resultMap type="Donation" id="donationResultMap">
		<result property="boardNo" column="BOARD_NO"/>
		<result property="userId" column="USER_ID"/>
		<result property="donationPoint" column="DONATION_POINT"/>
		<result property="donationDate" column="DONATION_DATE"/>
	</resultMap>
	<resultMap type="DonationReply" id="donationReplyResultMap">
		<id property="dtReplyNo" column="DT_REPLY_NO"/>
		<result property="boardNo" column="BOARD_NO"/>
		<result property="dtReplyContents" column="DT_REPLY_CONTENTS"/>
		<result property="dtReplyUserId" column="DT_REPLY_USERID"/>
		<result property="dtReplyDate" column="DT_REPLY_DATE"/>
	</resultMap>
	
	<!-- 페이징 처리 위한 count -->
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*) FROM DONATION_BOARD
	</select>
	<!-- donationBoard 리스트 불러오기 -->
	<select id="selectDonationBoardAllList" resultMap="donationBoardResultMap">
		SELECT
		D.BOARD_NO, D.DT_SUBJECT, D.DT_CONTENTS, D.DT_REPLY_COUNT, D.DT_TARGET_AMOUNT, D.DT_DONATION_AMOUNT, D.DT_SUCCESS, D.WRITER_ID, D.WRITE_DATE,
		F.FILE_NAME, F.FILE_PATH, F.FILE_MAIN FROM DONATION_BOARD D LEFT JOIN DT_FILE F
		ON D.BOARD_NO = F.BOARD_NO WHERE F.FILE_MAIN = 'Y' ORDER BY BOARD_NO DESC
	</select>
	
	<!-- donationBoard 디테일 -->
	<select id="selectDonationOne" parameterType="_int" resultMap="donationBoardResultMap">
		SELECT * FROM DONATION_BOARD WHERE BOARD_NO = #{boardNo }
	</select>
	
	<!-- donationBoardImage -->
	<select id="selectDonationBoardImageList" parameterType="_int" resultMap="donationImageResultMap">
		SELECT * FROM DT_FILE WHERE BOARD_NO = #{boardNo }
	</select>
	
	<!-- 유저 포인트 조회 -->
	<select id="selectUserPoint" parameterType="string" resultType="_int">
		SELECT POINT FROM USERS WHERE USER_ID = #{userId }
	</select>
	
	<!-- 기부하기 후원 랭킹 -->
	<select id="selectDonationUserRanking" parameterType="_int" resultMap="donationResultMap">
		SELECT ROWNUM, C.* FROM (SELECT USER_ID, SUM(DONATION_POINT) AS DONATION_POINT FROM DONATION WHERE BOARD_NO = #{boardNo } GROUP BY USER_ID ORDER BY DONATION_POINT DESC) C WHERE ROWNUM BETWEEN 1 AND 3
	</select>
	
	<!-- 마이페이지 후원 게시물 리스트 -->
	<select id="selectMyDonation" resultMap="donationBoardResultMap">
      select d.board_no, d.dt_subject, d.dt_contents, d.dt_reply_count, d.dt_target_amount, D.DT_DONATION_AMOUNT, D.DT_SUCCESS, D.WRITER_ID, D.WRITE_DATE, e.* from donation_board D inner join (SELECT DISTINCT c.board_no, F.FILE_NAME, F.FILE_PATH, F.FILE_MAIN FROM DONATION c left join dt_file f on(c.board_no = f.board_no)  WHERE c.USER_ID = #{userId})e on (d.board_no = e.board_no) where e.file_main = 'Y'        
   </select>
   
   <!-- 기부게시판 댓글 리스트 -->
   <select id="selectAllReply" parameterType="_int" resultMap="donationReplyResultMap">
   		SELECT * FROM DT_BOARD_REPLY WHERE BOARD_NO = #{boardNo } ORDER BY DT_REPLY_NO DESC
   </select>
   
   <!-- 기부게시판 검색 카운트 -->
   <select id="selectSearchBoardListCount" parameterType="string" resultType="_int">
   		SELECT COUNT(*) FROM DONATION_BOARD WHERE DT_SUBJECT LIKE '%'||#{searchKey }||'%'
   </select>
   
   <!-- 기부게시판 검색 리스트 -->
   <select id="selectDonationBoardSearchList" parameterType="string" resultMap="donationBoardResultMap">
   		SELECT
		D.BOARD_NO, D.DT_SUBJECT, D.DT_CONTENTS, D.DT_REPLY_COUNT, D.DT_TARGET_AMOUNT, D.DT_DONATION_AMOUNT, D.DT_SUCCESS, D.WRITER_ID, D.WRITE_DATE,
		F.FILE_NAME, F.FILE_PATH, F.FILE_MAIN FROM DONATION_BOARD D LEFT JOIN DT_FILE F
		ON D.BOARD_NO = F.BOARD_NO WHERE F.FILE_MAIN = 'Y' AND D. DT_SUBJECT LIKE '%'||#{searchKey }||'%' ORDER BY BOARD_NO DESC
   </select>
   
   <!-- 관리자 어드민 페이지 카운트 -->
   <select id="selectAdminBoardListCount" resultType="_int">
   		SELECT COUNT(*) FROM DONATION_BOARD ORDER BY BOARD_NO DESC
   </select>
   
   <!-- 관리자 기부게시판 리스트 -->
   <select id="selectAdminBoardList" resultMap="donationBoardResultMap">
   		SELECT * FROM DONATION_BOARD ORDER BY BOARD_NO DESC
   </select>
	
	<insert id="insertDonationBoard">
		<selectKey keyProperty="boardNo" resultType="_int" order="BEFORE">
			SELECT SEQ_DT_BOARD_NO.NEXTVAL FROM dual
		</selectKey>
		INSERT INTO DONATION_BOARD VALUES(#{boardNo }, #{dtSubject }, #{dtContents }, DEFAULT, #{dtTargetAmount }, DEFAULT, DEFAULT,#{writerId } , DEFAULT)
	</insert>
	
	<insert id="insertDtFile" parameterType="list">
		<foreach item="item" open="INSERT ALL" close="SELECT * FROM SYS.DUAL" collection="list" separator=" ">
			INTO DT_FILE VALUES(#{item.boardNo }, #{item.fileName }, #{item.filePath }, #{item.fileSize }, DEFAULT, #{item.fileMain })
		</foreach>
	</insert>
	
	<!-- 도네이션 테이블 등록 -->
	<insert id="insertDonationUser" parameterType="Donation">
		INSERT INTO DONATION VALUES(#{boardNo }, #{userId }, #{donationPoint }, DEFAULT)
	</insert>
	
	<!-- 기부 포인트 히스토리 point 등록 -->
	<insert id="insertdonationPointHistory" parameterType="hashmap">
		INSERT INTO POINT_HISTORY VALUES(#{userId }, DEFAULT, #{pointContents }, DEFAULT, #{donationPoint }, DEFAULT)
	</insert>
	
	<!-- 유저포인트가 마이너스일때 chargePoint 사용할때 history -->
	<insert id="insertNormalPointHistory" parameterType="hashmap">
		INSERT INTO POINT_HISTORY VALUES(#{userId }, DEFAULT, '기부(지급포인트)', DEFAULT, #{point }, DEFAULT)
	</insert>
	
	<!-- 포인트 히스토리 chargePoint 차감 내역 등록 -->
	<insert id="insertUseChargePointHistory" parameterType="hashmap">
		INSERT INTO POINT_HISTORY VALUES(#{userId }, DEFAULT, '기부(충전포인트)', DEFAULT, #{cPoint }, 'Y')
	</insert>
	
	<!-- 기부게시판 댓글 작성 -->
	<insert id="insertDonationReply" >
		INSERT INTO DT_BOARD_REPLY VALUES(SEQ_DT_REPLY_NO.NEXTVAL, #{boardNo }, #{dtReplyContents }, #{dtReplyUserId }, DEFAULT)
	</insert>
	
	<!-- user donation -->
	<update id="donationUserPoint" parameterType="hashmap">
		UPDATE USERS SET POINT = POINT - #{donationPoint } WHERE USER_ID = #{userId }
	</update>
	<!-- 유저 포인트가 마이너스이면 0으로  -->
	<update id="updateUserPointZero" parameterType="string">
		UPDATE USERS SET POINT = 0 WHERE USER_ID = #{userId }
	</update>
	<!-- 유저 충전포인트 차감 -->
	<update id="updateUserChargePoint" parameterType="hashmap">
		UPDATE USERS SET CHARGE_POINT = CHARGE_POINT + #{donationPoint } WHERE USER_ID = #{userId }
	</update>
	
	<!-- 후원시 후원게시판 금액 수정 -->
	<update id="updateDonationBoardDonationAmount" parameterType="DonationBoard">
		UPDATE DONATION_BOARD SET DT_DONATION_AMOUNT = DT_DONATION_AMOUNT + #{donationAmount } WHERE BOARD_NO = #{boardNo }
	</update>
	
	<!-- 댓글 등록시 게시글 댓글수 add -->
	<update id="addBoardReplyCount" parameterType="_int">
		UPDATE DONATION_BOARD SET DT_REPLY_COUNT = DT_REPLY_COUNT + 1 WHERE BOARD_NO = #{boardNo }
	</update>
	
	<!--댓글 내용 수정 -->
	<update id="updateBoardReplyContents" parameterType="DonationReply">
		UPDATE DT_BOARD_REPLY SET DT_REPLY_CONTENTS = #{dtReplyContents } WHERE DT_REPLY_NO = #{dtReplyNo }
	</update>
	
	
	<!-- 댓글 삭제 -->
	<delete id="deleteBoardReply" parameterType="DonationReply">
		DELETE FROM DT_BOARD_REPLY WHERE DT_REPLY_NO = #{dtReplyNo }
	</delete>
</mapper>